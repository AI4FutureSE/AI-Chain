"PromptValues":{"需求指导":{
    "context":"Functional requirement: I want to develop a service that automatically draws according to the weather.\n\nRequirements guidance: You need to clarify what is the goal of implementing this function. For example to show an artistic representation of the current weather or to draw a relevant picture based on the future weather forecast.\nAnswer: I would like to draw a picture related to the future weather forecast.\n\nRequirements guidance: You should clarify the requirements in terms of technical implementation. For example, you need to determine where to get the weather information and in what way.\nAnswer: I want to get the weather of the day based on the weather API.\n\nRequirements guidance: You need to consider what goes into the design. For example, which colors to use for painting, canvas size, canvas type, etc.\nAnswer: Draw 500x500 pixel RGB color pictures.\n\nRequirements guidance: You need to specify some conditions. For example, paint automatically only on rainy or sunny days.\nAnswer: Abstract pictures when the weather is rainy and nature landscapes when the weather is sunny.\n\nPlease give requirement guidance for the following functional requirements based on the above form.\n\nFunctional requirement: {{req}}\n\n{{history}}\n\nRequirements guidance: "},
    "history":{"context":"chat = \"\"\"{{chat}}\"\"\"\nhuman = \"\"\"需求指导: {{human}}\"\"\"\nbot = \"\"\"回答: {{bot}}\"\"\"\nhistory = chat + \"\\n\" + human + \"\\n\" + bot + \"\\n\"\nprint(history)"},
    "拼接":{"context":"a = \"\"\"功能需求：{{xu}}\"\"\"\nb = \"\"\"{{his}}\"\"\"\nc = a + \"\\n\\n\" + b\nprint(c)"},
    "总结":{"context":"{{his}}\n\n请根据以上信息，帮我总结出一句话。\n\n"},
    "decompose":{"context":"<Requirement Description>\nI need to develop a function to obtain the weather conditions of the day according to the weather API and automatically draw 500x500 pixel RGB color paintings that meet the weather conditions, draw abstract paintings when the weather is rainy, and draw natural landscape paintings when the weather is sunny, so as to improve the user experience and entertainment.\n\n<Decomposed steps>\nTo achieve this function, you can follow the following steps to analyze and design the process:\n\n(Step1)Determine the API interface: First, you need to determine the API interface used to obtain weather information. You can select some open weather APIs, such as OpenWeatherMap, AccuWeather, etc.\n\n(Step2)Configure API key: After selecting the API interface, you need to configure the API key to access the API. Generally, the API provider will provide a key, which can be found in the API documentation.\n\n(Step3)Get weather data: Use the API key to access the API to get the weather data of the day. The data format is usually JSON or XML.\n\n(Step4)Parse weather data: parse the obtained JSON or XML format data into easy-to-handle data structures, such as dictionaries or objects.\n\n(Step5)Judge weather type: judge the weather type of the day according to the description information in the weather data. It can be classified according to weather conditions, such as sunny, cloudy and rainy days.\n\n(Step6)Generate RGB color according to weather type: In order to generate paintings that meet weather conditions, you need to map the weather type to the corresponding RGB color value. You can map sunny days to blue tones, rainy days to gray tones, and snowy days to white tones.\n\n(Step7)Generate paintings according to weather type: generate 500x500 pixel paintings according to weather type and corresponding RGB color values. For rainy days, you can generate abstract paintings, and for sunny days, you can generate natural landscape paintings.\n\n(Step8)Display paintings: display the generated paintings to users to improve user experience and entertainment.\n\n<Requirement Description>\n{{Requirement}} \n\n"}},
